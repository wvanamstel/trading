# -*- coding: utf-8 -*-
"""
Created on Thu Feb  5 17:55:48 2015

@author: w
"""

class Position(object):
    def __init__(self, side, market, units, exposure, avg_price, cur_price):
        self.side = side
        self.market = market
        self.units = units
        self.exposure = exposure
        self.avg_price = avg_price
        self.cur_price = cur_price
        self.profit_base = self.calc_profit_base()
        self.profit_perc = self.calc_profit_perc()
        
    def calc_pips(self):
        # calc amount of pips generated by total position
        mult = 1
        if self.side == 'SHORT':
            mult = -1
        return mult * (self.cur_price - self.avg_price)
    
    def cal_profit_base(self):
        # calc nominal pnl of total position
        pips = self.calc_pips()
        return pips * self.exposure / self.cur_price
    
    def cal_profit_perc(self):
        # calc relative pnl of total position
        return self.profit_base / self.exposure * 100.
    
    def update_position_price(self, cur_price):
        # update pnl metrics to current instrument price
        self.cur_price = cur_price
        self.profit_base = self.cal_profit_base()
        self.profit_perc = self.cal_profit_perc()
        